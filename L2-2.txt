Где искать помощь: MDN
попробуйте там в помощи найти функцию splice.

Мы будем пользоваться Canvas Tutorial. Большинство первых глав переведены на русский.
                https://developer.mozilla.org/ru/docs/Web/API/Canvas_API/Tutorial

Скопируйте каталог template в каталог canvas-tutorial,
замените все названия файлов и ссылки на них с template на canvas-tutorial.

        Чтобы из Javascript обратиться к Canvas, пишем в функции init()

                    var canvas = document.getElementById(“game”);
                    var ctx = canvas.getContext(‘2d’);

        Первая переменная ссылается на элемент canvas на html,
        вторая переменная получает “контекст” для рисования. Именно с помощью переменной ctx мы будем рисовать.

Рисование на canvas: всё нарисованное остается на canvas навсегда,
и если вы хотите что-то исправить, нужно нарисовать поверх.
Еще есть возможность удалять прямоугольники.

        Рисовать можно прямоугольнки и “пути”, пути могут иметь произвольную форму,
        т.е. если нужен круг, треугольник, то рисуйте его с помощью пути. Path.

                    ctx.fillStyle = “red”; //цвета как в CSS. Можно “#FF0000”
                           //Или можно “rgb(255, 0, 0)”,
                          //Или “rgba(rgba(255, 0, 0, 0.5)”
                           // - это полупрозрачный
                    ctx.fillRect(0, 0, 100, 100); //координаты левого верхнего
                                                   //угла, и потом высоту и ширину
                    ctx.strokeStyle = “blue”;
                    ctx.strokeRect(10, 10, 100, 100); //нарисовали прямоугольник
                     //по границе.

        чтобы была однопиксельная рамочка, ставим 2рх, потому что оно иначе делает полпикселя
        и для красоты нужно тогда по полпикселя позиционировать

                    ctx.clearRect(0, 0, 640, 480) //очистить прямоугольник.

Рисование путей

        Сначала нужно обозначить путь, т.е. нарисовать его неявно, как будто карандашом.
        А потом нужно дать команду “обвести” путь или “закрасить” путь.
        Т.е. можно, например, нарисовать треугольник, а потом дать команду его обвести,
        тогда появится граница треугольника. А если дать команду “закрасить”, то появится
        и внутренность треугольника. Можно дать обе команды.

                    ctx.beginPath(); //обязательная команда, она говорит, что надо начать новый путь.
                                     //Без нее вы продолжите старый путь и будете удивляться тому, что нарисовалось.
                    ctx.moveTo(120, 120); //переместить карандаш в такую-то точку
                    ctx.lineTo(200, 140); //провести карандаш в точку
                    ctx.lineTo(140, 200); //опять провести карандаш
                    ctx.closePath(); //провести карандаш в начало путь. Это можно не делать.
                    ctx.fill(); //закрасить внутренность. Используется цвет fillStyle.
                                //Автоматически вызывает closePath()
                    ctx.stroke(); //используется цвет strokeStyle.


        //теперь давайте нарисуем хитрую форму

                    ctx.beginPath();
                    ctx.arc(200, 200, 50, 0, Math.PI);
                    ctx.lineTo(200, 220);
                    ctx.bezierCurveTo(210, 210, 240, 240, 250, 270);
                    ctx.stroke();

Простейшая анимация

        Функции задержки выполнения
                    setInterval(действие, через сколько миллисекунд)
                    setTimeout(действие, через сколько миллисекунд)

        setTimeout выполнит действие один раз, а setInterval будет повторять действие с указанной периодичностью.

         Как остановить действие
                    var id1 = setTimeout(действие, мс)
                    var id2 = setInterval(действие, мс)

                    clearTimeout(id1)
                    clearInterval(id2)

        если останавливать не нужно, то и переменные id1, id2 тоже не нужны.

        Ну а действие - это функция

                     setInterval(function() {console.log(‘hello’);}, 1000)

        Тогда каждую секунду будет печататься hello.

        Простейшая анимация устроена так:

                    function draw() {
                    	//при необходимости очистить canvas через clearRect()
                    	//рисуем новый кадр
                    }

                    setInterval(draw, 1000 / 60); //устанавливаем повторение действия на 60 раз в секунду

        Нарисуйте в draw() какой-нибудь объект. Например, прямоугольник.
        Чтобы прямоугольник двигался (например), нужно каждый раз рисовать его в новых координатах.
        Для этого нужно в методе draw изменять координату прямоугольника.
        Координата - это внешняя переменная для метода draw.
















    