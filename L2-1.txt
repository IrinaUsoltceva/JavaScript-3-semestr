	function f() {
	}

	function g() {
	}

	if (...)
		h = f;
	else
		h = g;
		
	f - ссылка на функцию
	f() - вызов функции

Анонимные функции
	
	function (аргументы) { тело}
	var f = function (x) {return x+1;};
	
Замыкания - используем внешние аргументы внутри функции
	var a = 1;
	function add(x) {return x + a;}
	console.log(add(10)); //11
	
	a = 2; - изменили внешнюю переменную
	console.log(add(20)); // нельзя угадать, такие вещи можно делать
							в разных языках, и везде будет получаться разное
							зависит от внешних переменных
							в JAva ответ "невозможно изменять переменные, которые
							позже используются внутри функции, они должны быыть
							константой" в других языках используется то значение, 
							которое было на момент запуска функции 
							
	var print = [null, null, null]; <- массив из 3 элементов
	for (var i = 0; i < 3; i++)
		print[i] = function(){console.log(i);};
	
	что напечатает print[1]? - ничего, это просто функция, нужны скобки
	что напечатает print[1]()? - напечатает 3, а хочется i 
								вызывает функцию, которая печатает
								

Массивы
	Создание
		a1 = [];
		a2 = ["xyz", 1, 10, [1, 2, 3]];
		a3 = new Array(10); - массив из 10 элементов
	
	Индексы
		a2[1] -> 1
		a2[2] -> 10
		a2[2]="ooo" присвоить
		длина a2.length
		
	Операции
		a.push(40); <- дописать в конец
		b = a.slice <- копия части массива
		
		a.splice = (1, 1, "abc", "def") ткуда, сколько стереть, что добавить
		
		все хранится ссылками, как в жавке
		a = [10, 20, 30]
		b = a;
		b[1] = 21;
		
		теперь оба массива [10, 21, 30]
		
		
	Объекты в жаваскрипте
		
		var a1 = {"name" : "ilya", "age" : 42};
		или
		var a1 = {name : "ilya", age : 42};
		
		a1.name
		a1.name="xyz"
		a1.surname="pqr"
		a1["name"] - как будто массив, ассоциативный массив (map в жавке), 
					но только со строчками
					
		В шариках будет [{x:10, y:20}, {x:21, y:40}] массив шариков
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	